name: "Frontend Continuous Deployment"

on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on push events to the main branch
  push:
    branches:
      - main
    paths:
      - "starter/frontend/**"

env:
  REACT_APP_MOVIE_API_URL: ""
  ECR_REGISTRY: "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com"
  ECR_REPOSITORY: "frontend"

jobs:
  lint:
    runs-on: "ubuntu-latest"

    defaults:
      run:
        working-directory: ./starter/frontend
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup-frontend

      - name: Lint
        run: npm run lint

  test:
    runs-on: "ubuntu-latest"

    defaults:
      run:
        working-directory: ./starter/frontend
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup-frontend

      - name: Test
        run: CI=true npm test

  build:
    needs: [lint, test]

    runs-on: "ubuntu-latest"

    defaults:
      run:
        working-directory: ./starter/frontend
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Get Backend URL and set to ENV
        run: |
          BACKEND_URL=$(kubectl get svc backend -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "REACT_APP_MOVIE_API_URL=$BACKEND_URL" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build \
            --build-arg=REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} \
            -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }} .

      - name: Push image to ECR
        run: |
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

  deploy:
    needs: [build]

    runs-on: "ubuntu-latest"

    defaults:
      run:
        working-directory: ./starter/frontend/k8s
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Set image tag using Kustomize
        run: |
          kustomize edit set image frontend=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Apply manifests to Kubernetes
        run: |
          kustomize build | kubectl apply -f -

      - name: Get LoadBalancer URL
        run: |
          FRONTEND_URL=$(kubectl get svc frontend -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "Deployed site URL: http://$FRONTEND_URL"
